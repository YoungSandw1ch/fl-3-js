{"mappings":"oeAGA,MAAMA,EAAQ,I,WAAIC,QAAIC,OAAM,iBACtBC,EAAO,CACXC,MAAOC,SAASC,cAAc,iBAC9BC,SAAUF,SAASC,cAAc,oBACjCE,UAAWH,SAASC,cAAc,qBAClCG,WAAYJ,SAASC,cAAc,sBACnCI,UAAWL,SAASC,cAAc,kBAClCK,WAAYN,SAASC,cAAc,WACnCM,WAAYP,SAASC,cAAc,sBACnCO,UAAWR,SAASC,cAAc,gBAE9BQ,EAASC,MAAMC,KAAKX,SAASY,iBAAiB,wBAAwBC,KAC1EC,GAAMA,EAAGC,KAEX,IAAIC,EAAc,EACdC,EAAY,KAkChB,SAASC,EAAIC,GACX,OAAO,IAAIC,SAAQC,IACjB,MAAMC,GAkDaC,EAlDQ,IAkDHC,EAlDS,IAmD5BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADtD,IAAuBA,EAAKC,EAhDxBI,YAAW,KACTP,EAAQ,C,MAAEF,E,KAAOG,GAAO,GACvBA,EAAK,G,CAmBZ,SAASO,EAAYC,EAAQC,GAC3BjC,EAAKS,WAAWyB,YAAcF,EAC9BhC,EAAKU,UAAUwB,YAAcD,C,CAG/B,SAASE,EAAgBF,GACvBjC,EAAKK,UAAU6B,YAAcD,C,CAG/B,SAASG,EAAiBH,GACxBjC,EAAKM,WAAW4B,YAAcD,C,CAnEhCjC,EAAKI,SAASiC,iBAAiB,SAW/B,WACE,GAAIrC,EAAKI,SAASkC,aAAa,YAAa,OAE5CpB,GAAe,EACf,MAAMqB,EAAW5B,EAAOI,IAAIK,GAE5BgB,EAAiB,IACjBD,EAAgB,wCAIlB,SAA6BI,GAC3BjB,QAAQkB,KAAKD,GAAUE,MAAK,EAACpB,MAAEA,EAAKG,KAAEA,MACpCY,EAAiB,qBAAqBf,cAAkBG,KACxD,MAAMkB,EAiDV,UAA+BrB,MAAEA,EAAKG,KAAEA,EAAImB,YAAEA,IAC5C,MAAO,qBAECA,mBACAtB,mBACAG,iB,CAtDcoB,CAAsB,C,MAAEvB,E,KAAOG,E,YAAMN,IA6C7D,IAAqB2B,IA5CLH,EA6Cd1C,EAAKO,UAAUuC,mBAAmB,YAAaD,GA5C7CV,EAAgB,qDAepB,SAAmBd,GACbF,IAAcE,GAChB0B,QAAQC,IAAI,WACZjB,EAAY,cAAe,GAAGV,yCAE9B0B,QAAQC,IAAI,YACZjB,EACE,cACA,GAAGZ,iCAAyCE,MAIhDxB,EAAMoD,M,CA1BJC,CAAU7B,EAAM,G,CATlB8B,CAAoBZ,E,IAlBtBvC,EAAKQ,WAAW6B,iBAAiB,UAGjC,SAAqBe,GAEnBjC,EAAYiC,EAAEC,OAAOpC,GACrBjB,EAAKI,SAASkD,gBAAgB,W","sources":["src/js/06-promises.js"],"sourcesContent":["import '../css/promises.css';\nimport BSN from 'bootstrap.native';\n\nconst modal = new BSN.Modal('#exampleModal');\nconst refs = {\n  modal: document.querySelector('#exampleModal'),\n  startBtn: document.querySelector('[data-start-btn]'),\n  infoStart: document.querySelector('[data-info-start]'),\n  infoWinner: document.querySelector('[data-info-winner]'),\n  tableBody: document.querySelector('.table > tbody'),\n  horsesList: document.querySelector('.horses'),\n  modalTiile: document.querySelector('#exampleModalLabel'),\n  modalBody: document.querySelector('.modal-body'),\n};\nconst horses = Array.from(document.querySelectorAll('input[name=\"horse\"]')).map(\n  el => el.id,\n);\nlet raceCounter = 0;\nlet horseName = null;\n\nrefs.startBtn.addEventListener('click', onStartRace);\nrefs.horsesList.addEventListener('change', onRadioPush);\n\n//=====================event listener callbacks==========================\nfunction onRadioPush(e) {\n  // console.log(e.target);\n  horseName = e.target.id;\n  refs.startBtn.removeAttribute('disabled');\n  // console.log(horseName);\n}\n\nfunction onStartRace() {\n  if (refs.startBtn.hasAttribute('disabled')) return;\n\n  raceCounter += 1;\n  const promises = horses.map(run);\n\n  updateWinnerInfo('');\n  updateStartInfo('Забег начался! Ставки не принимаются');\n  findAndRenderWinner(promises);\n}\n//=====================game logic engine==================================\nfunction findAndRenderWinner(promises) {\n  Promise.race(promises).then(({ horse, time }) => {\n    updateWinnerInfo(`Первым финиширует ${horse} за время ${time}`);\n    const tableMarkup = createTableBodyMarkup({ horse, time, raceCounter });\n    renderTable(tableMarkup);\n    updateStartInfo('Выберите лошадь и делайте ставки до начала забега');\n    showModal(horse);\n  });\n}\n\nfunction run(horse) {\n  return new Promise(resolve => {\n    const time = getRandomTime(2000, 4000);\n\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n//=====================show result of game================================\nfunction showModal(horse) {\n  if (horseName === horse) {\n    console.log('You win');\n    updateModal('ПОЗДРАВЛЯЕМ', `${horse} приносит Вам побегу в этом забеге`);\n  } else {\n    console.log('you suck');\n    updateModal(\n      'СОБОЛЕЗНУЕМ',\n      `${horseName} проигрывает забег, удача за ${horse}`,\n    );\n  }\n\n  modal.show();\n}\n//=====================update interface====================================\nfunction updateModal(result, message) {\n  refs.modalTiile.textContent = result;\n  refs.modalBody.textContent = message;\n}\n\nfunction updateStartInfo(message) {\n  refs.infoStart.textContent = message;\n}\n\nfunction updateWinnerInfo(message) {\n  refs.infoWinner.textContent = message;\n}\n\nfunction renderTable(markup) {\n  refs.tableBody.insertAdjacentHTML('beforeend', markup);\n}\n//====================create markup========================================\nfunction createTableBodyMarkup({ horse, time, raceCounter }) {\n  return `\n  <tr>\n    <td>${raceCounter}</td>\n    <td>${horse}</td>\n    <td>${time}</td>\n  </tr>`;\n}\n\n//====================common function======================================\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"],"names":["$68d75ab6939aacfe$var$modal","default","Modal","$68d75ab6939aacfe$var$refs","modal","document","querySelector","startBtn","infoStart","infoWinner","tableBody","horsesList","modalTiile","modalBody","$68d75ab6939aacfe$var$horses","Array","from","querySelectorAll","map","el","id","$68d75ab6939aacfe$var$raceCounter","$68d75ab6939aacfe$var$horseName","$68d75ab6939aacfe$var$run","horse","Promise","resolve","time","min","max","Math","floor","random","setTimeout","$68d75ab6939aacfe$var$updateModal","result","message","textContent","$68d75ab6939aacfe$var$updateStartInfo","$68d75ab6939aacfe$var$updateWinnerInfo","addEventListener","hasAttribute","promises","race","then","tableMarkup","raceCounter","$68d75ab6939aacfe$var$createTableBodyMarkup","markup","insertAdjacentHTML","console","log","show","$68d75ab6939aacfe$var$showModal","$68d75ab6939aacfe$var$findAndRenderWinner","e","target","removeAttribute"],"version":3,"file":"06-promises.4c128d60.js.map"}